resource "kubernetes_job" "upload_takeout" {
  metadata {
    name = "upload-takeout"
    namespace = kubernetes_namespace.main.metadata[0].name
    labels = { app = "upload-takeout" }
  }
  spec {
    backoff_limit = 0
    template {
      metadata {
        labels = { app = "upload-takeout" }
      }
      spec {
        restart_policy = "Never"
        volume {
          name = "src"
          persistent_volume_claim {
            claim_name = module.storage.media_pvc_name
          }
        }
        container {
          name = "main"
          image = "nixos/nix"
          command = [
            "bash", "-c",
            <<-EOS
              set -o errexit -o nounset -o pipefail
              mkdir -p ~/.config/rclone
              cat > ~/.config/rclone/rclone.conf <<-EOF
              [archive-b2-inner]
              type = b2
              account = $B2_ACCOUNT_ID
              key = $B2_ACCOUNT_KEY
              [archive-b2]
              type = alias
              remote = archive-b2-inner:${local.globals.b2.archive.bucket}
              EOF
              nix-env -iA nixpkgs.rclone
              rclone copy --progress --bwlimit 1500k /src/tmp/takeout-redacted@example.net-20240527-002.tar.gz.gpg archive-b2:google/takeout-redacted@example.net-20240527-002.tar.gz.gpg
              rclone copy --progress --bwlimit 1500k /src/tmp/takeout-redacted@example.net-20240527-001.tar.gz.gpg archive-b2:google/takeout-redacted@example.net-20240527-001.tar.gz.gpg
            EOS
          ]
          volume_mount {
            name = "src"
            mount_path = "/src"
            read_only = true
          }
          env_from {
            secret_ref {
              name = module.storage.archive_secret_name
            }
          }
        }
      }
    }
  }
  wait_for_completion = false
}
